{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Adiabatic flame temperature\n",
    "\n",
    "Consider a stoichiometric mixture of ethane (C$_2$H$_6$) at 25Â°C and 1 atm.\n",
    "Calculate the adiabatic flame temperature, assuming complete combustion."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import cantera as ct\n",
    "from scipy.optimize import root_scalar"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "from pint import UnitRegistry\n",
    "ureg = UnitRegistry()\n",
    "Q_ = ureg.Quantity"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The combustion reaction is\n",
    "\\begin{equation}\n",
    "\\text{C}_2 \\text{H}_6 + a (0.21 \\text{O}_2 + 0.79 \\text{N}_2) \\rightarrow b \\text{CO}_2 + c \\text{H}_2 \\text{O} + d \\text{N}_2\n",
    "\\end{equation}\n",
    "and we can solve for the stoichiometric coefficients $a$, $b$, $c$, and $d$ by performing elemental balances:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "a= 16.667, b= 2.00, c= 3.00, d= 13.167\n"
     ]
    }
   ],
   "source": [
    "b = 2.0\n",
    "c = 6.0 / 2.0\n",
    "a = (2*b + c) / (2*0.21)\n",
    "d = (a*0.79*2) / 2.0\n",
    "print(f'a={a: .3f}, b={b: .2f}, c={c: .2f}, d={d: .3f}')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "So the stoichiometric reaction is\n",
    "\\begin{equation}\n",
    "\\text{C}_2 \\text{H}_6 + 16.667 (0.21 \\text{O}_2 + 0.79 \\text{N}_2) \\rightarrow 2 \\text{CO}_2 + 3 \\text{H}_2 \\text{O} + 13.167 \\text{N}_2\n",
    "\\end{equation}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [],
   "source": [
    "pressure = Q_(1, 'atm')\n",
    "temperature_in = Q_(25, 'degC')\n",
    "\n",
    "# calculate inlet properties\n",
    "ethane = ct.Solution('gri30.cti')\n",
    "ethane.TPX = (\n",
    "    temperature_in.to('K').magnitude, pressure.to('Pa').magnitude,\n",
    "    'C2H6:1.0'\n",
    "    )\n",
    "\n",
    "nitrogen = ct.Solution('gri30.cti')\n",
    "nitrogen.TPX = (\n",
    "    temperature_in.to('K').magnitude, pressure.to('Pa').magnitude,\n",
    "    'N2:1.0'\n",
    "    )\n",
    "\n",
    "oxygen = ct.Solution('gri30.cti')\n",
    "oxygen.TPX = (\n",
    "    temperature_in.to('K').magnitude, pressure.to('Pa').magnitude,\n",
    "    'O2:1.0'\n",
    "    )\n",
    "\n",
    "enthalpy_reactants = ethane.h + 16.667 * (0.21 * oxygen.h + 0.79 * nitrogen.h)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Adiabatic flame temperature:  2441.29 K\n"
     ]
    }
   ],
   "source": [
    "def get_flame_temp(temp, pressure, enthalpy_in, gas):    \n",
    "    gas.TPX = temp, pressure, 'CO2:1.0'\n",
    "    enthalpy_co2 = gas.h\n",
    "    \n",
    "    gas.TPX = temp, pressure, 'H2O:1.0'\n",
    "    enthalpy_h2o = gas.h\n",
    "    \n",
    "    gas.TPX = temp, pressure, 'N2:1.0'\n",
    "    enthalpy_n2 = gas.h\n",
    "    \n",
    "    return (\n",
    "        2.0*enthalpy_co2 + 3.0*enthalpy_h2o + 13.167*enthalpy_n2 - \n",
    "        enthalpy_in\n",
    "        )\n",
    "    \n",
    "gas = ct.Solution('gri30.cti')\n",
    "\n",
    "sol = root_scalar(\n",
    "    get_flame_temp,\n",
    "    x0=1000., x1=2000.,\n",
    "    args=(pressure.to('Pa').magnitude, enthalpy_reactants, gas)\n",
    "    )\n",
    "\n",
    "print(f'Adiabatic flame temperature: {sol.root: .2f} K')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Solve using mixtures"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [],
   "source": [
    "gas = ct.Solution('gri30.cti')\n",
    "gas.TPX = (\n",
    "    temperature_in.to('K').magnitude, pressure.to('Pa').magnitude,\n",
    "    'C2H6:1.0, O2:3.5, N2:13.167'\n",
    "    )\n",
    "enthalpy_reactants = gas.h"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Adiabatic flame temperature:  2379.21 K\n"
     ]
    }
   ],
   "source": [
    "def get_flame_temp(temp, pressure, enthalpy_in, gas):\n",
    "    gas.TPX = (\n",
    "        temp, pressure, \n",
    "        'CO2:2.0, H2O:3.0, N2:13.167'\n",
    "        )\n",
    "        \n",
    "    return (gas.h - enthalpy_in)\n",
    "    \n",
    "gas = ct.Solution('gri30.cti')\n",
    "\n",
    "sol = root_scalar(\n",
    "    get_flame_temp,\n",
    "    x0=1000., x1=2000.,\n",
    "    args=(pressure.to('Pa').magnitude, enthalpy_reactants, gas)\n",
    "    )\n",
    "\n",
    "print(f'Adiabatic flame temperature: {sol.root: .2f} K')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Compare to Cantera solution"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Adiabatic flame temperature:  2379.85 K\n"
     ]
    }
   ],
   "source": [
    "# Get all of the Species objects defined in the GRI 3.0 mechanism\n",
    "species = {S.name: S for S in ct.Species.listFromFile('gri30.cti')}\n",
    "\n",
    "# Create an IdealGas object with species representing complete combustion\n",
    "complete_species = [species[S] for S in ('C2H6','O2','N2','CO2','H2O')]\n",
    "gas = ct.Solution(thermo='IdealGas', species=complete_species)\n",
    "\n",
    "gas.TP = temperature_in.to('K').magnitude, pressure.to('Pa').magnitude\n",
    "gas.set_equivalence_ratio(1.0, 'C2H6', 'O2:1, N2:3.76')\n",
    "gas.equilibrate('HP')\n",
    "\n",
    "print(f'Adiabatic flame temperature: {gas.T: .2f} K')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
